QTAV_MAJOR_VERSION = 1
QTAV_MINOR_VERSION = 13
QTAV_PATCH_VERSION = 0

QTAV_VERSION = $${QTAV_MAJOR_VERSION}.$${QTAV_MINOR_VERSION}.$${QTAV_PATCH_VERSION}
#MODULE_VERSION = $$QTAV_VERSION

# set runpath instead of rpath for gcc for elf targets. Qt>=5.5
CONFIG *= enable_new_dtags
android:CONFIG += no-libass
# OSX10.6 is not supported in Qt5.4
macx:isEqual(QT_MAJOR_VERSION,5):greaterThan(QT_MINOR_VERSION, 3): CONFIG *= c++11
android: CONFIG*=c++11
QMAKE_MACOSX_DEPLOYMENT_TARGET = 10.8
QMAKE_IOS_DEPLOYMENT_TARGET = 6.0

android:INCLUDEPATH += $$PWD/ffmpeg/ffmpeg-4.4-android-default/include
android:LIBS += -L$$PWD/ffmpeg/ffmpeg-4.4-android-default/lib/arm64-v8a
android:LIBS += -L$$PWD/ffmpeg/ffmpeg-4.4-android-default/lib/armeabi-v7a
android:LIBS += -L$$PWD/ffmpeg/ffmpeg-4.4-android-default/lib/x86
android:LIBS += -L$$PWD/ffmpeg/ffmpeg-4.4-android-default/lib/x86_64

win32 {
  !contains(QMAKE_TARGET.arch, x86_64) {
    message(32bit)
    INCLUDEPATH += $$PWD/ffmpeg/QtAV-depends-windows-x86+x64/include
    LIBS += -L$$PWD/ffmpeg/QtAV-depends-windows-x86+x64/lib
  } else {
    message(64bit)
    INCLUDEPATH += $$PWD/ffmpeg/QtAV-depends-windows-x86+x64/include
    LIBS += -L$$PWD/ffmpeg/QtAV-depends-windows-x86+x64/lib/x64
  }
}

